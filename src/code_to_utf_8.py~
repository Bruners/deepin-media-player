import chardet    
    
def auto_decode(s):    
    ''' auto detect the code and return unicode object. '''
    if isinstance(s, unicode):
        return s
    try:
        return s.decode("gbk")
    except UnicodeError:
        try:
            codedetect = chardet.detect(s)["encoding"]
            return s.decode(codedetect)
        except:    
            return s.decode(codedetect, "replace") + " " + ("[Invalid Encoding]")    

    
def fix_charset(s):    
    '''Fix the charset. unicode error'''
    if not s: return ""
    # try:
    #     chardet.detect(s)
    #     return s.encode("utf-8")
    # except:
    repr_char = repr(s) 
    if repr_char.startswith("u"):
        if repr_char.find("\u") != -1:
            return s.encode("utf-8")
        return auto_decode(eval(repr_char[1:])).encode("utf-8")
    else:
        return s
    
